// Test multiple SMS scenario with real names\nimport { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = 'https://jyvgjcagmmtiqgexqgwa.supabase.co'\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp5dmdqY2FnbW10aXFnZXhxZ3dhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc0MzA2MzQsImV4cCI6MjA3MzAwNjYzNH0.hftscrp2fspxoSFZ78V9xRYSg6y3Ag4Hx_5vEbiviwk'\n\nconst supabase = createClient(supabaseUrl, supabaseKey)\n\nasync function createTestRSVPAndSendSMS() {\n  console.log('üß™ Creating test RSVP with multiple attendees and sending SMS...')\n  \n  try {\n    // Test scenario: John Smith registering for himself + 2 additional people\n    // All SMS will be sent to test number 0812222331\n    const testPhone = '0812222331'\n    \n    const testRSVPData = {\n      full_name: 'John Smith',\n      email: 'john.smith@test.com',\n      phone: testPhone,\n      attendees: 3,\n      additional_attendees: [\n        {\n          fullName: 'Sarah Johnson',\n          phone: testPhone // All SMS go to test number\n        },\n        {\n          fullName: 'Michael Davis',\n          phone: testPhone // All SMS go to test number\n        }\n      ],\n      days: ['friday', 'saturday'],\n      drinks: ['beer', 'wine', 'water'],\n      meal_preference: 'standard',\n      special_requirements: 'SMS testing with multiple attendees',\n      confirmation_accepted: true,\n      status: 'pending'\n    }\n\n    // Create test RSVP in database\n    console.log('1Ô∏è‚É£ Creating test RSVP record...')\n    const { data: rsvpData, error: rsvpError } = await supabase\n      .from('rsvps')\n      .insert(testRSVPData)\n      .select()\n      .single()\n\n    if (rsvpError) {\n      console.error('‚ùå Failed to create test RSVP:', rsvpError)\n      return\n    }\n\n    console.log('‚úÖ Test RSVP created:', {\n      id: rsvpData.id,\n      name: rsvpData.full_name,\n      attendees: rsvpData.attendees\n    })\n\n    // Prepare attendees for SMS\n    const attendees = [\n      {\n        name: 'John Smith',\n        phone: testPhone\n      },\n      {\n        name: 'Sarah Johnson', \n        phone: testPhone\n      },\n      {\n        name: 'Michael Davis',\n        phone: testPhone\n      }\n    ]\n\n    console.log('\\n2Ô∏è‚É£ Sending individual SMS to each attendee...')\n    console.log('üì± All SMS will be sent to:', testPhone)\n    console.log('üë• Attendees:', attendees.map(a => a.name).join(', '))\n\n    // Call the SMS Edge Function\n    const { data: smsData, error: smsError } = await supabase.functions.invoke('send-rsvp-sms', {\n      body: {\n        rsvpId: rsvpData.id,\n        attendees: attendees\n      }\n    })\n\n    if (smsError) {\n      console.error('‚ùå SMS Edge Function Error:', smsError)\n      return\n    }\n\n    console.log('\\nüìä SMS Results:')\n    console.log('Total Attempted:', smsData.totalAttempted)\n    console.log('Successful:', smsData.successful)\n    console.log('Failed:', smsData.failed)\n    console.log('Overall Success:', smsData.success)\n\n    console.log('\\nüé´ Invitation Numbers Generated:')\n    smsData.invitationNumbers?.forEach(inv => {\n      console.log(`  ${inv.name}: ${inv.invitationNumber}`)\n    })\n\n    console.log('\\nüì± Individual SMS Results:')\n    smsData.results?.forEach(result => {\n      const status = result.success ? '‚úÖ Sent' : '‚ùå Failed'\n      console.log(`  ${result.name} (${result.invitationNumber}): ${status}`)\n      if (result.messageId) console.log(`    Message ID: ${result.messageId}`)\n      if (result.error) console.log(`    Error: ${result.error}`)\n    })\n\n    // Verify database update\n    console.log('\\n3Ô∏è‚É£ Verifying database update...')\n    const { data: updatedRSVP, error: fetchError } = await supabase\n      .from('rsvps')\n      .select('sms_confirmation_sent, sms_sent_at, invitation_numbers')\n      .eq('id', rsvpData.id)\n      .single()\n\n    if (!fetchError && updatedRSVP) {\n      console.log('‚úÖ Database updated:')\n      console.log('  SMS Sent:', updatedRSVP.sms_confirmation_sent)\n      console.log('  Sent At:', updatedRSVP.sms_sent_at)\n      console.log('  Invitation Numbers Stored:', updatedRSVP.invitation_numbers?.length || 0)\n    }\n\n    console.log('\\nüéâ Test Complete!')\n    console.log('\\nüì± Expected SMS Messages at', testPhone + ':')\n    console.log('\\n1Ô∏è‚É£ John Smith will receive:')\n    console.log('Dear John Smith,')\n    console.log('')\n    console.log('Welcome to Farm Aris Grand Opening!')\n    console.log('')\n    console.log('Your invitation: [UNIQUE_NUMBER]')\n    console.log('Date: 17-18 Jan 2025')\n    console.log('Location: Grootfontein, Namibia')\n    console.log('')\n    console.log('Lucky Draw Alert: Present this SMS to participate in our lucky draw - 3 winners will be selected!')\n    console.log('')\n    console.log('See you there!')\n    console.log('Farm Aris Team')\n    \n    console.log('\\n2Ô∏è‚É£ Sarah Johnson will receive:')\n    console.log('Dear Sarah Johnson,')\n    console.log('[Same format with her unique invitation number]')\n    \n    console.log('\\n3Ô∏è‚É£ Michael Davis will receive:')\n    console.log('Dear Michael Davis,')\n    console.log('[Same format with his unique invitation number]')\n\n  } catch (error) {\n    console.error('‚ùå Test failed:', error)\n  }\n}\n\ncreateTestRSVPAndSendSMS()"